<?xml version="1.0"?>
<ruleset name="Qulice Ruleset"
         xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">

  <description>
    This ruleset checks code for potential mess
  </description>

  <rule ref="rulesets/java/basic.xml">
    <exclude name="AvoidThreadGroup"/>
  </rule>
  <rule ref="rulesets/java/empty.xml"/>
  <rule ref="rulesets/java/braces.xml"/>
  <rule ref="rulesets/java/clone.xml" />
  <rule ref="rulesets/java/codesize.xml">
    <exclude name="TooManyMethods"/>
  </rule>
  <rule ref="rulesets/java/design.xml"/>
  <rule ref="rulesets/java/finalizers.xml"/>
  <rule ref="rulesets/java/imports.xml"/>
  <rule ref="rulesets/java/j2ee.xml">
    <exclude name="DoNotUseThreads"/>
  </rule>
  <rule ref="rulesets/java/javabeans.xml">
    <exclude name="BeanMembersShouldSerialize"/>
  </rule>
  <rule ref="rulesets/java/logging-java.xml">
    <exclude name="GuardLogStatementJavaUtil"/>
  </rule>
  <rule ref="rulesets/java/optimizations.xml"/>
  <rule ref="rulesets/java/strings.xml"/>
  <rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals">
    <properties>
      <property name="maxDuplicateLiterals">
        <value>2</value>
      </property>
    </properties>
  </rule>
  <rule ref="rulesets/java/sunsecure.xml"/>
  <rule ref="rulesets/java/unnecessary.xml"/>
  <rule ref="rulesets/java/unusedcode.xml"/>

  <rule ref="rulesets/java/coupling.xml">
    <exclude name="LoosePackageCoupling"/>
    <exclude name="LawOfDemeter"/>
  </rule>

  <rule ref="rulesets/java/controversial.xml">
    <exclude name="AtLeastOneConstructor"/>
    <exclude name="AvoidFinalLocalVariable"/>
    <exclude name="AvoidLiteralsInIfCondition"/>
    <exclude name="DataflowAnomalyAnalysis"/>
    <exclude name="UseConcurrentHashMap"/>
    <exclude name="AvoidUsingVolatile"/>
  </rule>

  <rule ref="rulesets/java/typeresolution.xml">
    <exclude name="SignatureDeclareThrowsException"/>
  </rule>

  <rule ref="rulesets/java/junit.xml">
    <exclude name="JUnitTestsShouldIncludeAssert"/>
  </rule>

  <rule name="ProhibitPlainJunitAssertionsRule"
        message="Avoid using Plain JUnit assertions"
        class="com.qulice.pmd.rules.ProhibitPlainJunitAssertionsRule">
    <description>
      Instead of using plain JUnit assertions like org.junit.Assert.assert*
      junit.framework.Assert.assert* - use Matchers from package org.hamcrest
    </description>
  </rule>

  <rule ref="rulesets/java/naming.xml">
    <exclude name="ShortClassName"/>
    <exclude name="ShortVariable"/>
  </rule>

  <rule ref="rulesets/java/strictexception.xml">
    <exclude name="SignatureDeclareThrowsException"/>
  </rule>

  <rule ref="rulesets/jsp/basic-jsf.xml"/>

  <rule name="UnnecessaryLocalRule"
        message="Avoid creating unnecessary local variables like ''{0}''"
        class="com.qulice.pmd.rules.UnnecessaryLocalRule">
  </rule>

  <!--<rule name="ConstructorShouldDoInitialization"-->
        <!--message="Avoid doing field initialization outside constructor."-->
        <!--language="java"-->
        <!--class="net.sourceforge.pmd.lang.rule.XPathRule">-->
    <!--<description>-->
      <!--Avoid doing field initialization outside class constructor.-->
      <!--Such initialization is allowed only when there is no constructor.-->
    <!--</description>-->
    <!--<properties>-->
      <!--<property name="xpath">-->
        <!--<value>-->
          <!--<![CDATA[-->
                        <!--//ClassOrInterfaceBody-->
                        <!--[count(ClassOrInterfaceBodyDeclaration/ConstructorDeclaration)>0]-->
                        <!--[count(ClassOrInterfaceBodyDeclaration/FieldDeclaration[@Static='false']/VariableDeclarator/VariableInitializer)>0]-->
                    <!--]]>-->
        <!--</value>-->
      <!--</property>-->
    <!--</properties>-->
    <!--<priority>3</priority>-->
  <!--</rule>-->

  <rule name="OnlyOneConstructorShouldDoInitialization"
        message="Avoid field initialization in several constructors."
        language="java"
        class="net.sourceforge.pmd.lang.rule.XPathRule">
    <description>
      Avoid doing field initialization in several constructors.
      Only one main constructor should do real work.
      Other constructors should delegate initialization to it.
    </description>
    <properties>
      <property name="xpath">
        <value>
          <![CDATA[
                            //ClassOrInterfaceBody[count(ClassOrInterfaceBodyDeclaration/ConstructorDeclaration)>1]
                            [count(ClassOrInterfaceBodyDeclaration/ConstructorDeclaration[BlockStatement])>1]
                    ]]>
        </value>
      </property>
    </properties>
    <priority>3</priority>
  </rule>

  <!--<rule name="ConstructorOnlyInitializesOrCallOtherConstructors"-->
        <!--message="Only field initialization or call to other contructors in a constructor."-->
        <!--language="java"-->
        <!--class="net.sourceforge.pmd.lang.rule.XPathRule">-->
    <!--<description>-->
      <!--Avoid putting anything other than field assignments into constructors.-->
      <!--The only exception should be calling other constructors-->
      <!--or calling super class constructor.-->
    <!--</description>-->
    <!--<properties>-->
      <!--<property name="xpath">-->
        <!--<value>-->
          <!--<![CDATA[-->
                            <!--//ConstructorDeclaration/BlockStatement[count(Statement/StatementExpression/PrimaryExpression[count(following-sibling::AssignmentOperator[1])>0]/PrimaryPrefix[@ThisModifier="true"])!=count(*)]-->
                    <!--]]>-->
        <!--</value>-->
      <!--</property>-->
    <!--</properties>-->
    <!--<priority>3</priority>-->
  <!--</rule>-->

  <!--<rule name="StaticAccessToStaticFields"-->
        <!--message="Static fields should be accessed in a static way [CLASS_NAME.FIELD_NAME]."-->
        <!--language="java"-->
        <!--class="net.sourceforge.pmd.lang.rule.XPathRule">-->
    <!--<description>-->
      <!--Avoid accessing static fields directly.-->
    <!--</description>-->
    <!--<properties>-->
      <!--<property name="xpath">-->
        <!--<value>-->
          <!--<![CDATA[-->
                            <!--//Name[@Image = //FieldDeclaration[@Static='true']/@VariableName]-->
                    <!--]]>-->
        <!--</value>-->
      <!--</property>-->
    <!--</properties>-->
    <!--<priority>3</priority>-->
  <!--</rule>-->

  <!--<rule name="ProhibitPublicStaticMethods"-->
        <!--message="Public static methods are prohibited."-->
        <!--language="java"-->
        <!--class="net.sourceforge.pmd.lang.rule.XPathRule">-->
    <!--<description>-->
      <!--Public static methods are prohibited.-->
    <!--</description>-->
    <!--<properties>-->
      <!--<property name="xpath">-->
        <!--<value>-->
          <!--<![CDATA[-->
                        <!--//ClassOrInterfaceBodyDeclaration[-->
                            <!--MethodDeclaration[@Static='true' and @Public='true'-->
                              <!--and not (-->
                               <!--MethodDeclarator[-->
                                <!--count(FormalParameters/FormalParameter)=1-->
                                <!--and @Image='main'-->
                                <!--and FormalParameters/FormalParameter[1]/Type/ReferenceType/ClassOrInterfaceType[@Image='String']-->
                                <!--and FormalParameters/FormalParameter[@Varargs='true']-->
                               <!--] and not(ResultType/Type)-->
                              <!--)-->
                            <!--] and (-->
                                <!--Annotation/MarkerAnnotation/Name[@Image!='BeforeClass' and @Image!='AfterClass'-->
                                  <!--and @Image!='Parameterized.Parameters']-->
                                <!--or not (Annotation)-->
                            <!--)-->
                        <!--]-->
                    <!--]]>-->
        <!--</value>-->
      <!--</property>-->
    <!--</properties>-->
    <!--<priority>3</priority>-->
  <!--</rule>-->

  <rule name="TooManyMethods"
        message="A class with too many public methods (max=10) is probably a good target for refactoring."
        language="java"
        class="net.sourceforge.pmd.lang.rule.XPathRule">
    <description>
      A class with too many public methods (max=10) is probably a good target for refactoring.
    </description>
    <properties>
      <property name="xpath">
        <value>
          <![CDATA[
          //ClassOrInterfaceDeclaration/ClassOrInterfaceBody
              [
                count(descendant::MethodDeclarator[
                ..[@Public='true'] and
                   not (
                          starts-with(@Image,'get')
                          or
                          starts-with(@Image,'set')
                          or
                          starts-with(@Image,'is')
                      )
                ]) > $maxmethods
             ]
          ]]>
        </value>
      </property>
    </properties>
    <priority>3</priority>
  </rule>
</ruleset>
